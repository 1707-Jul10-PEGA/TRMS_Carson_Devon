-- Carson and Devon
-- Project 1
-- Tuition Reimbursement Management System (TRMS) Database
-- 07-26-17


-- DROP DATABASE IF IT EXISTS
DROP USER TRMS CASCADE;

-- CREATE DATABASE
CREATE USER TRMS
IDENTIFIED BY p4ssw0rd
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA 10M ON users;

GRANT CONNECT TO TRMS;
GRANT RESOURCE TO TRMS;
GRANT CREATE SESSION TO TRMS;
GRANT CREATE TABLE TO TRMS;
GRANT CREATE VIEW TO TRMS;



CONN TRMS/p4ssw0rd

-- CREATE TABLES

-- REIMBURSEMENT TABLE FOR TRACKING REIMBURSEMENT VALUES PER EMPLOYEE
CREATE TABLE REIMBURSEMENT
(
    EM_ID NUMBER PRIMARY KEY,
    AVAILABLE_REIMBURSEMENT NUMBER(6,2) DEFAULT 1000.00 NOT NULL,
    TOTAL_REIMBURSEMENT NUMBER(6,2) DEFAULT 1000.00 NOT NULL,
    PENDING_REIMBURSEMENTS NUMBER(6,2) DEFAULT 0.00 NOT NULL,
    AWARDED_REIMBURSEMENTS NUMBER(6,2) DEFAULT 0.00 NOT NULL,
    -- CHECK CONSTRAINT FOR ALL REIMBURSEMENT VALUES TO NOT GO BELOW 0
    CONSTRAINT CHK_NONNEG CHECK (AVAILABLE_REIMBURSEMENT >= 0 AND TOTAL_REIMBURSEMENT >= 0 AND PENDING_REIMBURSEMENTS >= 0 AND AWARDED_REIMBURSEMENTS >= 0)
);

CREATE TABLE EVENT_TYPE
(
    EVT_ID NUMBER PRIMARY KEY,
    TYPE VARCHAR(33) DEFAULT 'Other' NOT NULL,
    COVERAGE NUMBER(3,2) DEFAULT 0.30 NOT NULL
);

-- CREATE TRIGGERS

-- CALCULATES THE AVAILABLE REIMBURSEMENT WHENEVER AN UPDATE IS MADE
CREATE OR REPLACE TRIGGER CALC_AVAILABLE_TRIGGER
    AFTER UPDATE
    ON REIMBURSEMENT
    FOR EACH ROW
    BEGIN
        UPDATE REIMBURSEMENT SET AVAILABLE_REIMBURSEMENT = (TOTAL_REIMBURSEMENT - PENDING_REIMBURSEMENTS - AWARDED_REIMBURSEMENTS);
    END;
/

-- CREATE PROCEDURE TO ANNUALLY RESET TOTALREIMBURSEMENT TO $1000.00
CREATE OR REPLACE PROCEDURE ANNUAL_RESET_PROCEDURE
    AS
    BEGIN
        DBMS_SCHEDULER.CREATE_JOB(
            JOB_NAME => 'ANNUAL RESET',
            JOB_TYPE => 'PLSQL_BLOCK',
            JOB_ACTION => '
                BEGIN
                    UPDATE REIMBURSEMENT
                        SET TOTAL_REIMBURSEMENT = 1000.00, AWARDED_REIMBURSEMENTS = 0.00;
                END;',
            START_DATE => SYSTIMESTAMP,
            REPEAT_INTERVAL => 'BYYEARDAY=1;BYHOUR=0;BYMINUTE=0;BYSECOND=0;',
            ENABLED => TRUE);
END;
/


-- POPULATE THE TABLES

INSERT INTO EVENT_TYPE VALUES (1, 'University Courses', 0.80);
INSERT INTO EVENT_TYPE VALUES (2, 'Seminars', 0.60);
INSERT INTO EVENT_TYPE VALUES (3, 'Certification Preparation Classes', 0.75);
INSERT INTO EVENT_TYPE VALUES (4, 'Certification', 1.00);
INSERT INTO EVENT_TYPE VALUES (5, 'Technical Training', 0.90);
INSERT INTO EVENT_TYPE VALUES (6, 'Other', 0.30);